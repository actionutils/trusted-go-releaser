name: E2E Test

on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout test repository
        uses: actions/checkout@v5
        with:
          repository: actionutils/test-trusted-go-releaser
          token: ${{ secrets.TEST_TRUSTED_GO_RELEASER_REPO_GITHUB_TOKEN }}

      - name: Create test base branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Create test base branch name
          TEST_BASE_BRANCH="test-base-pr-${{ github.event.pull_request.number }}"
          echo "TEST_BASE_BRANCH=$TEST_BASE_BRANCH" >> $GITHUB_ENV

          # Create base branch from main with sed changes
          git checkout -b "$TEST_BASE_BRANCH"

          # Update release.yml to use the PR branch instead of @main
          sed -i 's|actionutils/trusted-go-releaser/\.github/workflows/\([^@]*\)@main|actionutils/trusted-go-releaser/.github/workflows/\1@${{ github.event.pull_request.head.ref }}|g' .github/workflows/release.yml

          git add .github/workflows/release.yml
          git commit -m "chore: update workflow refs to use PR branch ${{ github.event.pull_request.head.ref }}"

          git push origin "$TEST_BASE_BRANCH"

      - name: Create feature branch
        run: |
          # Create feature branch name
          FEATURE_BRANCH="test-feature-pr-${{ github.event.pull_request.number }}-$(date +%s)"
          echo "FEATURE_BRANCH=$FEATURE_BRANCH" >> $GITHUB_ENV

          # Create feature branch from the test base branch
          git checkout -b "$FEATURE_BRANCH"

          # Make a minimal change to trigger a release
          echo "# Test change for PR #${{ github.event.pull_request.number }}" >> README.md
          echo "Test commit from trusted-go-releaser PR #${{ github.event.pull_request.number }}" >> test-file.txt

          git add .
          git commit -m "test: trigger release for trusted-go-releaser PR #${{ github.event.pull_request.number }}

          This is a test commit to validate the trusted-go-releaser workflow
          using ref: ${{ github.event.pull_request.head.ref }}"

          git push origin "$FEATURE_BRANCH"

      - name: Create PR with bump:patch label
        env:
          GH_TOKEN: ${{ secrets.TEST_TRUSTED_GO_RELEASER_REPO_GITHUB_TOKEN }}
        run: |
          gh pr create \
            --repo actionutils/test-trusted-go-releaser \
            --title "Test release for trusted-go-releaser PR #${{ github.event.pull_request.number }}" \
            --body "Automated test PR created from trusted-go-releaser PR #${{ github.event.pull_request.number }}

          **Source PR:** ${{ github.event.pull_request.html_url }}
          **Source Ref:** ${{ github.event.pull_request.head.ref }}
          **Source SHA:** ${{ github.event.pull_request.head.sha }}

          This PR tests the trusted-go-releaser workflow." \
            --head "$FEATURE_BRANCH" \
            --base "$TEST_BASE_BRANCH" \
            --label "bump:patch"

          # Store PR number for later use
          PR_NUMBER=$(gh pr list --repo actionutils/test-trusted-go-releaser --head "$FEATURE_BRANCH" --json number --jq '.[0].number')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

      - name: Merge PR
        env:
          GH_TOKEN: ${{ secrets.TEST_TRUSTED_GO_RELEASER_REPO_GITHUB_TOKEN }}
        run: |
          # Wait a moment for the PR to be fully created
          sleep 5

          # Merge the PR directly
          gh pr merge $PR_NUMBER \
            --repo actionutils/test-trusted-go-releaser \
            --squash \
            --delete-branch

          echo "PR #$PR_NUMBER merged successfully"

      - name: Output test PR info
        run: |
          echo "âœ… E2E test PR created and merged successfully!"
          echo "PR URL: https://github.com/actionutils/test-trusted-go-releaser/pull/$PR_NUMBER"
          echo "Check the test repository for workflow execution and release creation."
